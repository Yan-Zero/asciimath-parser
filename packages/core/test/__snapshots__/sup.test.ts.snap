// Vitest Snapshot v1

exports[`sup sub > should add sub to sup because the \`+\` causes the parser to look forward 1`] = `
[
  {
    "current": 1,
    "isKeyWord": false,
    "tex": "x",
    "type": "StringLiteral",
    "value": "x",
  },
  {
    "current": 2,
    "isKeyWord": true,
    "tex": "^{ $1 }",
    "type": "OperatorSup",
    "value": "^",
  },
  {
    "current": 3,
    "isKeyWord": true,
    "tex": "{+$1 }",
    "type": "OperatorMinus",
    "value": "+",
  },
  {
    "current": 4,
    "isKeyWord": false,
    "tex": "x",
    "type": "StringLiteral",
    "value": "x",
  },
  {
    "current": 5,
    "isKeyWord": true,
    "tex": "_{ $1 }",
    "type": "OperatorSup",
    "value": "_",
  },
  {
    "current": 6,
    "isKeyWord": false,
    "tex": "x",
    "type": "StringLiteral",
    "value": "x",
  },
]
`;

exports[`sup sub > should add sub to sup because the \`+\` causes the parser to look forward 2`] = `
{
  "body": [
    {
      "body": [
        {
          "tex": "x",
          "type": "Const",
          "value": "x",
        },
        {
          "params": {
            "params": {
              "body": [
                {
                  "tex": "x",
                  "type": "Const",
                  "value": "x",
                },
                {
                  "params": {
                    "tex": "x",
                    "type": "Const",
                    "value": "x",
                  },
                  "tex": "_{ $1 }",
                  "type": "ParamOne",
                },
              ],
              "type": "Flat",
            },
            "tex": "{+$1 }",
            "type": "ParamOne",
          },
          "tex": "^{ $1 }",
          "type": "ParamOne",
        },
      ],
      "type": "Flat",
    },
  ],
  "type": "Root",
}
`;

exports[`sup sub > should add sub to sup because the \`+\` causes the parser to look forward 3`] = `"x ^{ {+x _{ x } } }"`;

exports[`sup sub > should parse a formula that has both sup and sub 1`] = `
[
  {
    "current": 1,
    "isKeyWord": false,
    "tex": "x",
    "type": "StringLiteral",
    "value": "x",
  },
  {
    "current": 2,
    "isKeyWord": true,
    "tex": "^{ $1 }",
    "type": "OperatorSup",
    "value": "^",
  },
  {
    "current": 3,
    "isKeyWord": false,
    "tex": "x",
    "type": "StringLiteral",
    "value": "x",
  },
  {
    "current": 4,
    "isKeyWord": true,
    "tex": "_{ $1 }",
    "type": "OperatorSup",
    "value": "_",
  },
  {
    "current": 5,
    "isKeyWord": false,
    "tex": "x",
    "type": "StringLiteral",
    "value": "x",
  },
]
`;

exports[`sup sub > should parse a formula that has both sup and sub 2`] = `
{
  "body": [
    {
      "body": [
        {
          "tex": "x",
          "type": "Const",
          "value": "x",
        },
        {
          "params": {
            "tex": "x",
            "type": "Const",
            "value": "x",
          },
          "tex": "^{ $1 }",
          "type": "ParamOne",
        },
        {
          "params": {
            "tex": "x",
            "type": "Const",
            "value": "x",
          },
          "tex": "_{ $1 }",
          "type": "ParamOne",
        },
      ],
      "type": "Flat",
    },
  ],
  "type": "Root",
}
`;

exports[`sup sub > should parse a formula that has both sup and sub 3`] = `"x ^{ x } _{ x }"`;
